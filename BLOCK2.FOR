C.................................................................INTCOM
      SUBROUTINE INTCOM(IREG,X,Y,N,XO,YO)
      INCLUDE 'PARAMS.FOR'
      DIMENSION X(LP10,LP9),Y(LP10,LP9)

      IF(XO.GE.X(IREG,N)) THEN
         YO=Y(IREG,N)
         RETURN
      ENDIF

      IF(XO.LT.X(IREG,1)) THEN
         YO=Y(IREG,1)
         RETURN
      ENDIF

      DO 10 I=2,N
      IF(XO.LE.X(IREG,I)) THEN
         YO=Y(IREG,I)
         RETURN
      ENDIF

  10  CONTINUE
      END
C.................................................................INTERP
      SUBROUTINE INTERP(IREG,X,Y,N,XO,YO)
      INCLUDE 'PARAMS.FOR'
      DIMENSION X(LP10,LP9),Y(LP10,LP9)

      IF(XO.GE.X(IREG,N)) THEN
         YO = Y(IREG,N)
         RETURN
      ENDIF

      IF(XO.LT.X(IREG,1)) THEN
         YO = Y(IREG,1)
         RETURN
      ENDIF

      DO 10 I=2,N
      IF(XO.GE.X(IREG,I)) GO TO 10
      YO=Y(IREG,I-1) +(XO-X(IREG,I-1))*(Y(IREG,I)-Y(IREG,I-1))
     &                                /(X(IREG,I)-X(IREG,I-1))
      RETURN
  10  CONTINUE
      END
C.................................................................INTPVT
      SUBROUTINE INTPVT(IREG,BPT,RM,X,Y,N,XO,YO)
      INCLUDE 'PARAMS.FOR'
      DIMENSION X(LP10,LP9),Y(LP10,LP9)

      IF(XO.GT.BPT) GO TO 100

      IF(XO.GE.X(IREG,N)) THEN
         YO=Y(IREG,N)
         RETURN
      ENDIF

      IF(XO.LT.X(IREG,1)) THEN
         YO = Y(IREG,1)
         RETURN
      ENDIF

      DO 10 I=2,N
      IF(XO.GE.X(IREG,I))GO TO 10
      YO=Y(IREG,I-1)+(XO-X(IREG,I-1))*(Y(IREG,I)-Y(IREG,I-1))
     &                               /(X(IREG,I)-X(IREG,I-1))
      RETURN
   10 CONTINUE

  100 CONTINUE

      DO 200 I=2,N
      IF(BPT.GE.X(IREG,I)) GO TO 200
      YOBP=Y(IREG,I-1)+(BPT-X(IREG,I-1))*(Y(IREG,I)-Y(IREG,I-1))
     &                                  /(X(IREG,I)-X(IREG,I-1))
      YO=YOBP+RM*(XO-BPT)
      RETURN
  200 CONTINUE
      END
C........................................................................LSORX
      SUBROUTINE LSORX(NX,NY,NZ,OMEGA,TOL,TOL1,MITER,DELT,DELT0,KSN,
     & N,NITER)
C      MACHINE DEPENDENT INCLUDE STATEMENT
      INCLUDE 'PARAMS.FOR'
C      ITERATIVE SOLUTION: X-DIRECTION TRIDIAGONAL ALGORITHM
      COMMON /COEF/ AW(LP1,LP2,LP3),AE(LP1,LP2,LP3),AN(LP1,LP2,LP3),
     & AS(LP1,LP2,LP3),AB(LP1,LP2,LP3),AT(LP1,LP2,LP3),E(LP1,LP2,LP3),
     & B(LP1,LP2,LP3)
      COMMON /SARRAY/ PN(LP1,LP2,LP3),IOCODE,IDMAX,
     & SON(LP1,LP2,LP3),SWN(LP1,LP2,LP3),SGN(LP1,LP2,LP3),
     & A1(LP1,LP2,LP3),A2(LP1,LP2,LP3),A3(LP1,LP2,LP3),
     & SUM(LP1,LP2,LP3),GAM(LP1,LP2,LP3),QS(LP1,LP2,LP3)
      COMMON /SPRTPS/ P(LP1,LP2,LP3),SO(LP1,LP2,LP3),SW(LP1,LP2,LP3),
     & SG(LP1,LP2,LP3)
      COMMON /VECTOR/ DX(LP1,LP2,LP3),DY(LP1,LP2,LP3),DZ(LP1,LP2,LP3),
     & DZNET(LP1,LP2,LP3),IQN1(LP11),IQN2(LP11),IQN3(LP11),IHEDIN(80)
      COMMON /TRIDI/ UM(LP15),AZL(LP15),BZL(LP15),CZL(LP15),DZL(LP15),
     & UZL(LP15),X(LP15),BETA(LP15),GAMMA(LP15),W(LP15)
      DIV=DELT/DELT0
      NITER=0
      DMAX=1.0
      RHO1=0.0
      THETA=0.0
   11 CONTINUE
      TW = 1.0 - OMEGA
      DMAX0=DMAX
      THETA0=THETA
      IF(NITER.GE.MITER)WRITE(IOCODE,30)NITER,TOL,DMAX
      IF(NITER.GE.MITER)RETURN
      NITER = NITER +1
      DMAX=0.0
      DO 20 K=1,NZ
      DO 20 J=1,NY
      DO 15 I=1,NX
      UM(I) = P(I,J,K)
      AZL(I) = AW(I,J,K)
      BZL(I)=E(I,J,K)
      CZL(I)=AE(I,J,K)
      DZL(I)=B(I,J,K)
      IF(NY.EQ.1) GO TO 14
      JM=J-1
      JP=J+1
      IF(J.EQ.1) JM=1
      IF(J.EQ.NY) JP=NY
      DZL(I)=DZL(I) - AS(I,J,K)*P(I,JM,K) - AN(I,J,K)*P(I,JP,K)
   14 IF(NZ.EQ.1) GO TO 15
      KM=K-1
      KP=K+1
      IF(K.EQ.1)KM=1
      IF(K.EQ.NZ) KP=NZ
      DZL(I)=DZL(I) - AT(I,J,K)*P(I,J,KM) - AB(I,J,K)*P(I,J,KP)
15    CONTINUE
C     THIS ALGORITHM SOLVES THE TRIDIAGONAL SYSTEM
C     GENERATED BY THE SYSTEM OF N EQUATIONS
C     AZL(I)*U(I-1) + BZL(I)*U(I) + CZL(I)*U(I+1) = DZL(I)
      BETA(1)=BZL(1)
      GAMMA(1)=DZL(1)/BZL(1)
      NXM=NX-1
C      COMPUTE FORWARD SOLUTION.
      DO 1010 ITRI=1,NXM
      W(ITRI)=CZL(ITRI)/BETA(ITRI)
      ITRIP=ITRI+1
 1010 BETA(ITRIP)=BZL(ITRIP)-AZL(ITRIP)*W(ITRI)
      DO 1020 ITRI=2,NX
      ITRIM=ITRI-1
 1020 GAMMA(ITRI)=(DZL(ITRI)-AZL(ITRI)*GAMMA(ITRIM))/BETA(ITRI)
C      COMPUTE BACK SOLUTION
      UZL(NX)=GAMMA(NX)
      DO 1030 JTRI=1,NXM
      ITRI=NX-JTRI
      ITRIP=ITRI+1
 1030 UZL(ITRI)=GAMMA(ITRI)-W(ITRI)*UZL(ITRIP)
      DO 16 I=1,NX
      GSLSOR=UZL(I)
      P(I,J,K) = TW*UM(I) + OMEGA*GSLSOR
      ARG=P(I,J,K) - UM(I)
      DM=ABS(ARG)
      IF(DM.GT.DMAX) DMAX = DM
16    CONTINUE
20    CONTINUE
      IF(TOL1.EQ.0.0)GO TO 25
      THETA=DMAX/DMAX0
      DELTA=THETA-THETA0
      ARG=DELTA
      ARG=ABS(ARG)
      IF(ARG.GT.TOL1)GO TO 25
      OM=OMEGA-1.0
      RHO1=(THETA+OM)*(THETA+OM)/(THETA*OMEGA*OMEGA)
      IF(RHO1.GE.1.0)GO TO 25
      ARG=1.0-RHO1
      OMEGA=2.0/(1.0+SQRT(ARG))
25    IF(DMAX.GT.TOL)GO TO 11
      IF(N.NE.KSN) GO TO 300
      WRITE(IOCODE,40)NITER,OMEGA,DMAX,THETA,RHO1
 300  CONTINUE
40    FORMAT(T5,'CONVERGENCE(LSORX) HAS BEEN REACHED AFTER ',I3,
     &' ITERATIONS',5X,'OMEGA = ',F6.3/
     &T5,'DMAX = ',F10.6,5X,'THETA = ',F10.6,5X,'RHO1 = ',F10.6/)
30    FORMAT(T5,'CONVERGENCE(LSORX) WAS NOT REACHED IN ',I5,
     &' ITERATIONS'/T5,'TOL = ',F10.7,10X,'DMAX = ',F15.7)
      RETURN
      END
C........................................................................LSORY
      SUBROUTINE LSORY(NX,NY,NZ,OMEGA,TOL,TOL1,MITER,DELT,DELT0,KSN,
     & N,NITER)
C      MACHINE DEPENDENT INCLUDE STATEMENT
      INCLUDE 'PARAMS.FOR'
C      ITERATIVE SOLUTION: Y-DIRECTION TRIDIAGONAL ALGORITHM
      COMMON /COEF/ AW(LP1,LP2,LP3),AE(LP1,LP2,LP3),AN(LP1,LP2,LP3),
     & AS(LP1,LP2,LP3),AB(LP1,LP2,LP3),AT(LP1,LP2,LP3),E(LP1,LP2,LP3),
     & B(LP1,LP2,LP3)
      COMMON /SARRAY/ PN(LP1,LP2,LP3),IOCODE,IDMAX,
     & SON(LP1,LP2,LP3),SWN(LP1,LP2,LP3),SGN(LP1,LP2,LP3),
     & A1(LP1,LP2,LP3),A2(LP1,LP2,LP3),A3(LP1,LP2,LP3),
     & SUM(LP1,LP2,LP3),GAM(LP1,LP2,LP3),QS(LP1,LP2,LP3)
      COMMON /SPRTPS/ P(LP1,LP2,LP3),SO(LP1,LP2,LP3),SW(LP1,LP2,LP3),
     & SG(LP1,LP2,LP3)
      COMMON /VECTOR/ DX(LP1,LP2,LP3),DY(LP1,LP2,LP3),DZ(LP1,LP2,LP3),
     & DZNET(LP1,LP2,LP3),IQN1(LP11),IQN2(LP11),IQN3(LP11),IHEDIN(80)
      COMMON /TRIDI/ UM(LP15),AZL(LP15),BZL(LP15),CZL(LP15),DZL(LP15),
     & UZL(LP15),X(LP15),BETA(LP15),GAMMA(LP15),W(LP15)
      DIV=DELT/DELT0
      NITER=0
      DMAX=1.0
      RHO1=0.0
      THETA=0.0
   11 CONTINUE
      TW = 1.0 - OMEGA
      DMAX0=DMAX
      THETA0=THETA
      IF(NITER.GE.MITER)WRITE(IOCODE,30)NITER,TOL,DMAX
      IF(NITER.GE.MITER)RETURN
      NITER = NITER +1
      DMAX=0.0
      DO 20 K=1,NZ
      DO 20 I=1,NX
      DO 15 J=1,NY
      UM(J) = P(I,J,K)
      AZL(J) = AS(I,J,K)
      BZL(J)=E(I,J,K)
      CZL(J)=AN(I,J,K)
      DZL(J)=B(I,J,K)
      IF(NX.EQ.1) GO TO 14
      IM=I-1
      IP=I+1
      IF(I.EQ.1) IM=1
      IF(I.EQ.NX) IP=NX
      DZL(J)=DZL(J) - AW(I,J,K)*P(IM,J,K) - AE(I,J,K)*P(IP,J,K)
   14 IF(NZ.EQ.1) GO TO 15
      KM=K-1
      KP=K+1
      IF(K.EQ.1)KM=1
      IF(K.EQ.NZ) KP=NZ
      DZL(J)=DZL(J) - AT(I,J,K)*P(I,J,KM) - AB(I,J,K)*P(I,J,KP)
15    CONTINUE
C     THIS ALGORITHM SOLVES THE TRIDIAGONAL SYSTEM
C     GENERATED BY THE SYSTEM OF N EQUATIONS
C     AZL(J)*U(J-1) + BZL(J)*U(J) + CZL(J)*U(J+1) = DZL(J)
      BETA(1)=BZL(1)
      GAMMA(1)=DZL(1)/BZL(1)
      NYM=NY-1
C      COMPUTE FORWARD SOLUTION.
      DO 1010 ITRI=1,NYM
      W(ITRI)=CZL(ITRI)/BETA(ITRI)
      ITRIP=ITRI+1
 1010 BETA(ITRIP)=BZL(ITRIP)-AZL(ITRIP)*W(ITRI)
      DO 1020 ITRI=2,NY
      ITRIM=ITRI-1
 1020 GAMMA(ITRI)=(DZL(ITRI)-AZL(ITRI)*GAMMA(ITRIM))/BETA(ITRI)
C      COMPUTE BACK SOLUTION
      UZL(NY)=GAMMA(NY)
      DO 1030 JTRI=1,NYM
      ITRI=NY-JTRI
      ITRIP=ITRI+1
 1030 UZL(ITRI)=GAMMA(ITRI)-W(ITRI)*UZL(ITRIP)
      DO 16 J=1,NY
      GSLSOR=UZL(J)
      P(I,J,K) = TW*UM(J) + OMEGA*GSLSOR
      ARG=P(I,J,K) - UM(J)
      DM=ABS(ARG)
      IF(DM.GT.DMAX) DMAX = DM
16    CONTINUE
20    CONTINUE
      IF(TOL1.EQ.0.0)GO TO 25
      THETA=DMAX/DMAX0
      DELTA=THETA-THETA0
      ARG=DELTA
      ARG=ABS(ARG)
      IF(ARG.GT.TOL1)GO TO 25
      OM=OMEGA-1.0
      RHO1=(THETA+OM)*(THETA+OM)/(THETA*OMEGA*OMEGA)
      IF(RHO1.GE.1.0)GO TO 25
      ARG=1.0-RHO1
      OMEGA=2.0/(1.0+SQRT(ARG))
25    IF(DMAX.GT.TOL)GO TO 11
      IF(N.NE.KSN) GO TO 300
      WRITE(IOCODE,40)NITER,OMEGA,DMAX,THETA,RHO1
 300  CONTINUE
40    FORMAT(T5,'CONVERGENCE(LSORY) HAS BEEN REACHED AFTER ',I3,
     &' ITERATIONS',5X,'OMEGA = ',F6.3/
     &T5,'DMAX = ',F10.6,5X,'THETA = ',F10.6,5X,'RHO1 = ',F10.6/)
30    FORMAT(T5,'CONVERGENCE(LSORY) WAS NOT REACHED IN ',I5,
     &' ITERATIONS'/T5,'TOL = ',F10.7,10X,'DMAX = ',F15.7)
      RETURN
      END
C.................................................................LSORZ
      SUBROUTINE LSORZ(NX,NY,NZ,OMEGA,TOL,TOL1,MITER,DELT,DELT0,KSN,
     & N,NITER)

C      MACHINE DEPENDENT INCLUDE STATEMENT
      INCLUDE 'PARAMS.FOR'

C      ITERATIVE SOLUTION: Z-DIRECTION TRIDIAGONAL ALGORITHM

      COMMON /COEF/ AW(LP1,LP2,LP3),AE(LP1,LP2,LP3),AN(LP1,LP2,LP3),
     & AS(LP1,LP2,LP3),AB(LP1,LP2,LP3),AT(LP1,LP2,LP3),E(LP1,LP2,LP3),
     & B(LP1,LP2,LP3)

      COMMON /SARRAY/ PN(LP1,LP2,LP3),IOCODE,IDMAX,
     & SON(LP1,LP2,LP3),SWN(LP1,LP2,LP3),SGN(LP1,LP2,LP3),
     & A1(LP1,LP2,LP3),A2(LP1,LP2,LP3),A3(LP1,LP2,LP3),
     & SUM(LP1,LP2,LP3),GAM(LP1,LP2,LP3),QS(LP1,LP2,LP3)

      COMMON /SPRTPS/ P(LP1,LP2,LP3),SO(LP1,LP2,LP3),SW(LP1,LP2,LP3),
     & SG(LP1,LP2,LP3)

      COMMON /VECTOR/ DX(LP1,LP2,LP3),DY(LP1,LP2,LP3),DZ(LP1,LP2,LP3),
     & DZNET(LP1,LP2,LP3),IQN1(LP11),IQN2(LP11),IQN3(LP11),IHEDIN(80)

      COMMON /TRIDI/ UM(LP15),AZL(LP15),BZL(LP15),CZL(LP15),DZL(LP15),
     & UZL(LP15),X(LP15),BETA(LP15),GAMMA(LP15),W(LP15)

      DIV=DELT/DELT0
C!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
C      WRITE(*,11111) DELT,DELT0,DIV
C11111 FORMAT(///1X,'DELT,DELT0,DIV:',3G14.6)
C      PAUSE 'AFTER DIV= IN LSORZ'
C!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

      NITER=0

      DMAX=1.0
      RHO1=0.0
      THETA=0.0
   11 CONTINUE
      TW = 1.0 - OMEGA
      DMAX0=DMAX
      THETA0=THETA
      IF(NITER.GE.MITER) WRITE(IOCODE,30) NITER,TOL,DMAX
      IF(NITER.GE.MITER) RETURN
      NITER = NITER +1
      DMAX=0.0
      DO 20 I=1,NX
      DO 20 J=1,NY
      DO 15 K=1,NZ
      UM(K) = P(I,J,K)
      AZL(K) = AT(I,J,K)
      BZL(K)=E(I,J,K)
      CZL(K)=AB(I,J,K)
      DZL(K)=B(I,J,K)
      IF(NY.EQ.1) GO TO 14
      JM=J-1
      JP=J+1
      IF(J.EQ.1) JM=1
      IF(J.EQ.NY) JP=NY
      DZL(K)=DZL(K) - AS(I,J,K)*P(I,JM,K) - AN(I,J,K)*P(I,JP,K)
   14 IF(NX.EQ.1) GO TO 15
      IM=I-1
      IP=I+1
      IF(I.EQ.1)IM=1
      IF(I.EQ.NX) IP=NX
      DZL(K)=DZL(K) - AW(I,J,K)*P(IM,J,K) - AE(I,J,K)*P(IP,J,K)
   15 CONTINUE

C     THIS ALGORITHM SOLVES THE TRIDIAGONAL SYSTEM
C     GENERATED BY THE SYSTEM OF N EQUATIONS
C     AZL(K)*U(K-1) + BZL(K)*U(K) + CZL(K)*U(K+1) = DZL(K)
      BETA(1)=BZL(1)
      GAMMA(1)=DZL(1)/BZL(1)
      NZM=NZ-1
C      COMPUTE FORWARD SOLUTION.
      DO 1010 ITRI=1,NZM
      W(ITRI)=CZL(ITRI)/BETA(ITRI)
      ITRIP=ITRI+1
 1010 BETA(ITRIP)=BZL(ITRIP)-AZL(ITRIP)*W(ITRI)
      DO 1020 ITRI=2,NZ
      ITRIM=ITRI-1
 1020 GAMMA(ITRI)=(DZL(ITRI)-AZL(ITRI)*GAMMA(ITRIM))/BETA(ITRI)
C      COMPUTE BACK SOLUTION
      UZL(NZ)=GAMMA(NZ)
      DO 1030 JTRI=1,NZM
      ITRI=NZ-JTRI
      ITRIP=ITRI+1
 1030 UZL(ITRI)=GAMMA(ITRI)-W(ITRI)*UZL(ITRIP)
      DO 16 K=1,NZ
      GSLSOR=UZL(K)
      P(I,J,K) = TW*UM(K) + OMEGA*GSLSOR
      ARG=P(I,J,K) - UM(K)
      DM=ABS(ARG)
      IF(DM.GT.DMAX) DMAX = DM
16    CONTINUE
20    CONTINUE

      IF(TOL1.LE.1.E-06) GO TO 25

      THETA=DMAX/DMAX0
      DELTA=THETA-THETA0
      ARG=DELTA
      ARG=ABS(ARG)
      IF(ARG.GT.TOL1)GO TO 25
      OM=OMEGA-1.0
      RHO1=(THETA+OM)*(THETA+OM)/(THETA*OMEGA*OMEGA)
      IF(RHO1.GE.1.0)GO TO 25
      ARG=1.0-RHO1
      OMEGA=2.0/(1.0+SQRT(ARG))
25    IF(DMAX.GT.TOL) GO TO 11

      IF(N.NE.KSN) GO TO 300
      WRITE(IOCODE,40) NITER,OMEGA,DMAX,THETA,RHO1
300   CONTINUE

40    FORMAT(T5,'CONVERGENCE(LSORZ) HAS BEEN REACHED AFTER ',I3,
     &' ITERATIONS',5X,'OMEGA = ',F6.3/
     &T5,'DMAX = ',F10.6,5X,'THETA = ',F10.6,5X,'RHO1 = ',F10.6/)

30    FORMAT(T5,'CONVERGENCE(LSORZ) WAS NOT REACHED IN ',I5,
     &' ITERATIONS'/T5,'TOL = ',F10.7,10X,'DMAX = ',F15.7)

      RETURN
      END
